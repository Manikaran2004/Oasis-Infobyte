pip install tk matplotlib sqlite3
import tkinter as tk
from tkinter import messagebox
from tkinter import ttk
import sqlite3
from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
# Database setup
conn = sqlite3.connect('bmi_data.db')
cursor = conn.cursor()
conn.commit()
class BMICalculatorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("BMI Calculator")
        # User input fields
        self.name_label = tk.Label(root, text="Name:")
        self.name_label.grid(row=0, column=0, padx=10, pady=10)
        self.name_entry = tk.Entry(root)
        self.name_entry.grid(row=0, column=1, padx=10, pady=10)

        self.weight_label = tk.Label(root, text="Weight (kg):")
        self.weight_label.grid(row=1, column=0, padx=10, pady=10)
        self.weight_entry = tk.Entry(root)
        self.weight_entry.grid(row=1, column=1, padx=10, pady=10)

        self.height_label = tk.Label(root, text="Height (cm):")
        self.height_label.grid(row=2, column=0, padx=10, pady=10)
        self.height_entry = tk.Entry(root)
        self.height_entry.grid(row=2, column=1, padx=10, pady=10)

        self.calculate_button = tk.Button(root, text="Calculate BMI", command=self.calculate_bmi)
        self.calculate_button.grid(row=3, column=0, columnspan=2, pady=10)

        self.result_label = tk.Label(root, text="BMI: N/A")
        self.result_label.grid(row=4, column=0, columnspan=2, pady=10)

        self.view_history_button = tk.Button(root, text="View History", command=self.view_history)
        self.view_history_button.grid(row=5, column=0, columnspan=2, pady=10)

    def calculate_bmi(self):
        try:
            name = self.name_entry.get()
            weight = float(self.weight_entry.get())
            height = float(self.height_entry.get()) / 100  # Convert to meters
            bmi = weight / (height * height)
            self.result_label.config(text=f"BMI: {bmi:.2f}")

            cursor.execute("INSERT INTO bmi_records (name, weight, height, bmi, date) VALUES (?, ?, ?, ?, date('now'))",
                           (name, weight, height, bmi))
            conn.commit()
        except ValueError:
            messagebox.showerror("Input error", "Please enter valid weight and height.")

    def view_history(self):
        history_window = tk.Toplevel(self.root)
        history_window.title("BMI History")

        tree = ttk.Treeview(history_window, columns=("name", "weight", "height", "bmi", "date"), show='headings')
        tree.heading("name", text="Name")
        tree.heading("weight", text="Weight (kg)")
        tree.heading("height", text="Height (m)")
        tree.heading("bmi", text="BMI")
        tree.heading("date", text="Date")

        cursor.execute("SELECT name, weight, height, bmi, date FROM bmi_records")
        for row in cursor.fetchall():
            tree.insert("", tk.END, values=row)

        tree.pack(expand=True, fill=tk.BOTH)

        plot_button = tk.Button(history_window, text="Plot BMI Trend", command=lambda: self.plot_trend(history_window))
        plot_button.pack(pady=10)

    def plot_trend(self, parent_window):
        cursor.execute("SELECT date, bmi FROM bmi_records ORDER BY date")
        data = cursor.fetchall()

        dates = [row[0] for row in data]
        bmis = [row[1] for row in data]

        fig = Figure(figsize=(5, 4), dpi=100)
        plot = fig.add_subplot(111)
        plot.plot(dates, bmis, marker='o')
        plot.set_title("BMI Trend")
        plot.set_xlabel("Date")
        plot.set_ylabel("BMI")

        canvas = FigureCanvasTkAgg(fig, master=parent_window)
        canvas.draw()
        canvas.get_tk_widget().pack(fill=tk.BOTH, expand=True)

if __name__ == "__main__":
    root = tk.Tk()
    app = BMICalculatorApp(root)
    root.mainloop()
